docker.enabled = false
// Wave configuration for cross-platform container handling
wave {
    enabled = true
    strategy = ['container']
}

// Profiles for different environments
profiles {
    // MacOS/Local development profile
    mac {
        process.executor = 'local'
        docker.enabled = true
        singularity.enabled = false
        
        process {
            cpus = 2
            memory = 4.GB
        }
    }
    
    // HPC profile with Singularity
    hpc {
        process.executor = 'slurm'
        docker.enabled = false
        singularity.enabled = true
        singularity.autoMounts = true
        singularity.cacheDir = '/shared/singularity/cache'
        
        process {
            queue = 'your-queue-name'
            cpus = 8
            memory = 16.GB
            time = '4h'
            
            resourceLimits = [
                memory: 750.GB,
                cpus: 200,
                time: 30.d
            ]
        }
    }
    
    // Automatic platform detection profile
    auto {
        // Wave handles container conversion automatically
        wave.enabled = true
        
        // Detect platform and set appropriate container engine
        docker.enabled = { 
            System.getProperty("os.name").toLowerCase().contains("mac") ||
            System.getProperty("os.name").toLowerCase().contains("windows") ||
            (System.getProperty("os.name").toLowerCase().contains("linux") && 
             new File("/var/run/docker.sock").exists())
        }
        
        singularity.enabled = {
            !docker.enabled && 
            (System.getenv("SLURM_JOB_ID") != null || 
             new File("/usr/bin/singularity").exists() ||
             new File("/usr/local/bin/singularity").exists())
        }
        
        process.executor = {
            if (System.getenv("SLURM_JOB_ID") != null) {
                'slurm'
            } else if (System.getenv("PBS_JOBID") != null) {
                'pbs'
            } else {
                'local'
            }
        }
        
        // Conditional Singularity settings
        singularity.autoMounts = true
        singularity.cacheDir = { 
            System.getenv("SINGULARITY_CACHEDIR") ?: 
            (System.getenv("HOME") + "/.singularity/cache")
        }
    }
}
params {
  species = 'K_pneumoniae'
  genomes   = "../${params.species}/ncbi_dataset/data/*/*.fna"
  roll = "/genomes/${params.species}.csv"
  window    = 25
  threshold = [1.4, 2.0]
  g4script  = 'scripts/main.py'
  g4dataproc = 'scripts/secondary.py'
  g4mergenappend = "scripts/g4mergenappend.py"
  thresh_value = 1.4
}
