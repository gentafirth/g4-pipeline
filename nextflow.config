// Wave configuration for cross-platform container handling
wave {
    enabled = true
    strategy = ['conda']
    freeze = true
}

params {
    species = 'K_pneumoniae'
    
    // Input data paths
    genomes = "${projectDir}/../${params.species}/ncbi_dataset/data/*/*.fna"
    roll = "${projectDir}/data/genomes/${params.species}.csv"
    
    // Numeric parameters
    window = 25
    threshold = [1.4, 2.0]
    thresh_value = 1.4
    
    // Script paths
    g4script = "${projectDir}/scripts/main.py"
    g4dataproc = "${projectDir}/scripts/secondary.py"
    g4mergenappend = "${projectDir}/scripts/g4mergenappend.py"
    
    // Output directory
    outdir = "results"
}

// Profiles for different environments
profiles {
    // MacOS/Local development profile
    mac {
        process.executor = 'local'
        docker.enabled = true
        singularity.enabled = false
        
        process {
            cpus = 1
            memory = 4.GB
        }
    }
    
    // HPC profile with Singularity
    hpc {
        process.executor = 'slurm'
        docker.enabled = false
        singularity.enabled = true
        singularity.autoMounts = true
        singularity.cacheDir = '/shared/singularity/cache'
        
        process {
            queue = 'your-queue-name'
            cpus = 8
            memory = 16.GB
            time = '4h'
            
            resourceLimits = [
                memory: 750.GB,
                cpus: 200,
                time: 30.d
            ]
        }
    }
}

process {
    cache = 'lenient'
    cpus = 1
    memory = 4.GB
    time = '2h'

    withName: 'runG4Hunter' {
        tag = "running G4Hunter.py on each genome"
        conda = "${projectDir}/environments/g4hunter_env.yml"
        
    }
    withName: 'mergeResults' {
        tag = "merging results.csv files and appending strain"
        conda = "${projectDir}/environments/python_env.yml"
    }
}

include {
    moduleDir = './modules'
}