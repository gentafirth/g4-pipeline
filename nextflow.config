// Wave configuration for cross-platform container handling
wave {
    enabled = true
    strategy = ['conda']
    freeze = true
}

params {
    species = 'genomes'

    // Workflow instructions
    run_analysis = true

    // Input data paths
    genomes = "${projectDir}/../${params.species}/ncbi_dataset/data/*/*.fna"
    roll = "${projectDir}/data/genomes/${params.species}.csv"
    query_fasta = "${projectDir}/../queries.fna"

    // Numeric parameters
    window = 25
    thresh_value = 1.2

    // Script paths
    g4script = "${projectDir}/scripts/main.py"
    g4dataproc = "${projectDir}/scripts/secondary.py"
    g4mergenappend = "${projectDir}/scripts/g4mergenappend.py"
    g4hunter2bed = "${projectDir}/scripts/g4hunter2bed.py"
    analysisscript = "${projectDir}/scripts/data_analysis/data_analysis.R"
    addsequence = "${projectDir}/scripts/data_analysis/add_sequence.py"
    parse_blast = "${projectDir}/scripts/parse_blast.py"

    // Output directory
    outdir = "results"
    pangenome_path = "${projectDir}/pangenome_reference"
    generate_pangenome = false
    auto_discover = true

    // BLAST parameters
    identity = 90.0
    coverage = 80.0
    blast_type = 'nucl'

    // Advanced BLAST parameters
    evalue = 1e-5
    max_target_seqs = 10000
}

// Profiles for different environments
profiles {
        // Default profile - will be used if no profile is specified
    standard {
        process.executor = 'local'
        docker.enabled = true
        singularity.enabled = false

        process {
            cpus = 1
            memory = 4.GB
        }
    }

    // MacOS/Local development profile
    mac {
        process.executor = 'local'
        docker.enabled = true
        singularity.enabled = false

        process {
            withLabel: 'process_low' {
                cpus = 1
                memory = 2.GB
                time = '1h'
            }
            withLabel: 'process_medium' {
                cpus = 1
                memory = 2.GB
                time = '1h'
            }
            withLabel: 'process_high' {
                cpus = 1
                memory = 2.GB
                time = '1h'
            }
        }
    }

    // HPC profile with Singularity
    hpc {
        process{
            executor = 'slurm'
            queue = 'sapphire'
            // clusterOptions = '--account=gfirth'
        }

        executor {
            queueSize = 25  // Maximum number of jobs in queue
            submitRateLimit = '10/1min'  // Submit max 10 jobs per minute
            pollInterval = '30s'  // Check job status every 30 seconds
        }
        docker.enabled = false
        singularity.enabled = false
        conda.enabled = true
        conda.mamba = true
        process {
            withLabel: 'process_low' {
                cpus = 1
                memory = 4.GB
                time = '2h'
            }
            withLabel: 'process_medium' {
                cpus = 1
                memory = 64.GB
                time = '6h'
            }
            withLabel: 'process_high' {
                cpus = 1
                memory = 4.GB
                time = '6h'
            }
        }
    }
}

process {
    cache = 'lenient'

    // Modular process names
    withName: 'G4HUNTER' {
        conda = "${projectDir}/environments/g4hunter_env.yml"
    }

    withName: 'MERGE_SUMMARIES' {
        conda = "${projectDir}/environments/python_env.yml"
    }

    withName: 'PLOTTING'{
        conda = "${projectDir}/environments/data_analysis_env.yml"
        //memory = '64 GB'
    }

    withName: 'CONCAT_GENOMES' {
        // Should be removed at a later date
        conda = "${projectDir}/environments/blast_env.yml"
    }

    withName: 'MAKE_BLAST_DB' {
        conda = "${projectDir}/environments/blast_env.yml"
    }

    withName: 'BLAST_QUERIES' {
        conda = "${projectDir}/environments/blast_env.yml"
    }

    withName: 'PARSE_RESULTS' {
        conda = "${projectDir}/environments/python_env.yml"
    }

}
